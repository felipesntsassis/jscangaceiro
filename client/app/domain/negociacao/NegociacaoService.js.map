{"version":3,"sources":["../../../app-src/domain/negociacao/NegociacaoService.js"],"names":["HttpService","Negociacao","NegociacaoService","constructor","_http","obterNegociacoesDaSemana","get","then","dados","negociacoes","map","objeto","Date","data","quantidade","valor","err","Error","obterNegociacoesDaSemanaAnterior","obterNegociacoesDaSemanaRetrasada","obterNegociacoesDoPeriodo","Promise","all","periodo","reduce","novoArray","item","concat","sort","a","b","getTime","catch","console","log"],"mappings":";;;;;;AAASA,uB,sBAAAA,W;;AACAC,sB,iCAAAA,U;;;AAEF,kBAAMC,iBAAN,CAAwB;AAC3BC,8BAAc;AACV,yBAAKC,KAAL,GAAa,IAAIJ,WAAJ,EAAb;AACH;;AAEDK,2CAA2B;AACvB,2BAAO,KAAKD,KAAL,CACFE,GADE,CACE,oBADF,EAEFC,IAFE,CAGCC,SAAS;AACL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADgB,CAApB;AAEA,+BAAON,WAAP;AACH,qBAPF,EAQCO,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,iDAAV,CAAN;AACH,qBAVF,CAAP;AAYH;;AAEDC,mDAAmC;AAC/B,2BAAO,KAAKd,KAAL,CACFE,GADE,CACE,sBADF,EAEFC,IAFE,CAGCC,SAAS;AACL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADgB,CAApB;AAEA,+BAAON,WAAP;AACH,qBAPF,EAQCO,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,0DAAV,CAAN;AACH,qBAVF,CAAP;AAYH;;AAEDE,oDAAoC;AAChC,2BAAO,KAAKf,KAAL,CACFE,GADE,CACE,uBADF,EAEFC,IAFE,CAGCC,SAAS;AACL,8BAAMC,cAAcD,MAAME,GAAN,CAAUC,UAC1B,IAAIV,UAAJ,CAAe,IAAIW,IAAJ,CAASD,OAAOE,IAAhB,CAAf,EAAsCF,OAAOG,UAA7C,EAAyDH,OAAOI,KAAhE,CADgB,CAApB;AAEA,+BAAON,WAAP;AACH,qBAPF,EAQCO,OAAO;AACH,8BAAM,IAAIC,KAAJ,CAAU,2DAAV,CAAN;AACH,qBAVF,CAAP;AAYH;;AAEDG,4CAA4B;AACxB,2BAAOC,QAAQC,GAAR,CAAY,CACf,KAAKjB,wBAAL,EADe,EAEf,KAAKa,gCAAL,EAFe,EAGf,KAAKC,iCAAL,EAHe,CAAZ,EAKNZ,IALM,CAKDgB,WAAW;AACb,+BAAOA,QACFC,MADE,CACK,CAACC,SAAD,EAAYC,IAAZ,KAAqBD,UAAUE,MAAV,CAAiBD,IAAjB,CAD1B,EACkD,EADlD,EAEFE,IAFE,CAEG,CAACC,CAAD,EAAIC,CAAJ,KAAUA,EAAEjB,IAAF,CAAOkB,OAAP,KAAmBF,EAAEhB,IAAF,CAAOkB,OAAP,EAFhC,CAAP;AAGH,qBATM,EAUNC,KAVM,CAUAhB,OAAO;AACViB,gCAAQC,GAAR,CAAYlB,GAAZ;AACA,8BAAM,IAAIC,KAAJ,CAAU,kDAAV,CAAN;AACH,qBAbM,CAAP;AAcH;AAjE0B","file":"NegociacaoService.js","sourcesContent":["import { HttpService } from '../../util/HttpService.js';\nimport { Negociacao } from '../../domain/negociacao/Negociacao.js';\n\nexport class NegociacaoService {\n    constructor() {\n        this._http = new HttpService();\n    }\n\n    obterNegociacoesDaSemana() {\n        return this._http\n            .get('negociacoes/semana')\n            .then(\n                dados => {\n                    const negociacoes = dados.map(objeto => \n                        new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n                    return negociacoes;\n                },\n                err => {\n                    throw new Error('Não foi possível obter as negociações da semana');\n                }\n            );\n    }\n\n    obterNegociacoesDaSemanaAnterior() {\n        return this._http\n            .get('negociacoes/anterior')\n            .then(\n                dados => {\n                    const negociacoes = dados.map(objeto => \n                        new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n                    return negociacoes;\n                },\n                err => {\n                    throw new Error('Não foi possível obter as negociações da semana anterior');\n                }\n            );\n    }\n\n    obterNegociacoesDaSemanaRetrasada() {\n        return this._http\n            .get('negociacoes/retrasada')\n            .then(\n                dados => {\n                    const negociacoes = dados.map(objeto => \n                        new Negociacao(new Date(objeto.data), objeto.quantidade, objeto.valor));\n                    return negociacoes;\n                },\n                err => {\n                    throw new Error('Não foi possível obter as negociações da semana retrasada');\n                }\n            );\n    }\n\n    obterNegociacoesDoPeriodo() {\n        return Promise.all([\n            this.obterNegociacoesDaSemana(),\n            this.obterNegociacoesDaSemanaAnterior(),\n            this.obterNegociacoesDaSemanaRetrasada()\n        ])\n        .then(periodo => {\n            return periodo\n                .reduce((novoArray, item) => novoArray.concat(item), [])\n                .sort((a, b) => b.data.getTime() - a.data.getTime());\n        })\n        .catch(err => {\n            console.log(err);\n            throw new Error('Não foi possível obter as negociações do período');\n        });\n    }\n}"]}