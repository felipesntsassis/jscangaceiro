{"version":3,"sources":["../../app-src/controller/NegociacaoController.js"],"names":["Negociacoes","NegociacaoService","Negociacao","NegociacoesView","MensagemView","Mensagem","DataInvalidaException","DateConverter","getNegociacaoDao","Bind","getExceptionMessage","NegociacaoController","constructor","$","document","querySelector","bind","_inputData","_inputQuantidade","_inputValor","_negociacoes","_mensagem","_service","_init","adiciona","event","preventDefault","negociacao","_criaNegociacao","dao","texto","_limparFormulario","err","apaga","apagaTodos","esvazia","importaNegociacoes","negociacoes","obterNegociacoesDoPeriodo","console","log","filter","paraArray","some","novaNegociacao","equals","negociacaoExistente","forEach","value","focus","paraData","parseInt","parseFloat","listaTodos"],"mappings":"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","file":"NegociacaoController.js","sourcesContent":["import { Negociacoes, NegociacaoService, Negociacao} from '../domain/index.js';\nimport { NegociacoesView, MensagemView, Mensagem, DataInvalidaException, DateConverter } from '../ui/index.js';\nimport { getNegociacaoDao, Bind, getExceptionMessage } from '../util/index.js';\n\nexport class NegociacaoController {\n    constructor () {\n        const $ = document.querySelector.bind(document);\n        this._inputData = $('#data');\n        this._inputQuantidade = $('#quantidade');\n        this._inputValor = $('#valor');\n        this._negociacoes = new Bind(\n            new Negociacoes(),\n            new NegociacoesView('#negociacoes'),\n            'adiciona', 'esvazia'\n        );\n        this._mensagem = new Bind(\n            new Mensagem(),\n            new MensagemView('#mensagemView'),\n            'texto'\n        );\n        this._service = new NegociacaoService();\n        this._init();\n        \n    }\n\n    async adiciona(event) {\n        try {\n            event.preventDefault();\n            const negociacao = this._criaNegociacao();\n            const dao = await getNegociacaoDao();\n            await dao.adiciona(negociacao);\n            this._negociacoes.adiciona(negociacao);\n            this._mensagem.texto = 'Negociação adicionada com sucesso';\n            this._limparFormulario();\n        } catch (err) {\n            this._mensagem.texto = getExceptionMessage(err);\n        }\n    }\n\n    async apaga() {\n        try {\n            const dao = await getNegociacaoDao();\n            await dao.apagaTodos();\n            this._negociacoes.esvazia();\n            this._mensagem.texto = 'Negociações apagadas com sucesso';\n        } catch (err) {\n            this._mensagem.texto = getExceptionMessage(err);    \n        }\n        \n    }\n\n    async importaNegociacoes() {\n        try {\n            const negociacoes = await this._service.obterNegociacoesDoPeriodo();\n            console.log(negociacoes);\n            negociacoes.filter(novaNegociacao => !this._negociacoes.paraArray()\n                .some(negociacaoExistente => novaNegociacao.equals(negociacaoExistente)))\n                .forEach(negociacao => this._negociacoes.adiciona(negociacao));\n            this._mensagem.texto = 'Negociações importadas com sucesso!';\n        } catch (err) {\n            this._mensagem.texto = getExceptionMessage(err);\n        }\n    }\n\n    _limparFormulario() {\n        this._inputData.value = '';\n        this._inputQuantidade.value = 1;\n        this._inputValor.value = 0.0;\n        this._inputData.focus();\n    }\n\n    _criaNegociacao() {\n        return new Negociacao(\n            DateConverter.paraData(this._inputData.value),\n            parseInt(this._inputQuantidade.value),\n            parseFloat(this._inputValor.value)\n        );\n    }\n\n    async _init() {\n        try {\n            const dao = await getNegociacaoDao();\n            const negociacoes = await dao.listaTodos();\n            negociacoes.forEach(negociacao => this._negociacoes.adiciona(negociacao));\n        } catch (err) {\n            this._mensagem.texto = getExceptionMessage(err);\n        }\n    }\n}"]}